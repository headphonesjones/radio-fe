// Generated by CoffeeScript 1.6.2
(function() {
  var ColonAssignmentSpacing;

  module.exports = ColonAssignmentSpacing = (function() {
    function ColonAssignmentSpacing() {}

    ColonAssignmentSpacing.prototype.rule = {
      name: 'colon_assignment_spacing',
      level: 'ignore',
      message: 'Colon assignment without proper spacing',
      spacing: {
        left: 0,
        right: 0
      },
      description: "<p>This rule checks to see that there is spacing before and\nafter the colon in a colon assignment (i.e., classes, objects).\nThe spacing amount is specified by\nspacing.left and spacing.right, respectively.\nA zero value means no spacing required.\n</p>\n<pre><code>\n#\n# If spacing.left and spacing.right is 1\n#\n\n# Good\nobject = {spacing : true}\nclass Dog\n  canBark : true\n\n# Bad\nobject = {spacing: true}\nclass Cat\n  canBark: false\n</code></pre>"
    };

    ColonAssignmentSpacing.prototype.tokens = [':'];

    ColonAssignmentSpacing.prototype.lintToken = function(token, tokenApi) {
      var leftAllowance, leftSpaced, leftSpacing, nextToken, rightAllowance, rightSpaced, rightSpacing, spacingAllowances, _ref, _ref1;

      spacingAllowances = tokenApi.config[this.rule.name].spacing;
      leftSpacing = token[2].first_column - ((_ref = tokenApi.peek(-1)) != null ? _ref[2].last_column : void 0);
      leftAllowance = parseInt(spacingAllowances.left) + 1;
      leftSpaced = leftSpacing === leftAllowance;
      nextToken = tokenApi.peek(1);
      rightAllowance = nextToken[0] === 'STRING' ? parseInt(spacingAllowances.right) + 1 : parseInt(spacingAllowances.right);
      rightSpacing = ((_ref1 = nextToken[2]) != null ? _ref1.first_column : void 0) - token[2].last_column;
      rightSpaced = rightSpacing === rightAllowance;
      if (rightSpaced && leftSpaced) {
        return null;
      } else {
        return {
          context: ("Expect colon spacing left: " + spacingAllowances.left + ", right: " + spacingAllowances.right + ".") + (" Got left: " + leftSpacing + ", right: " + rightSpacing + ".")
        };
      }
    };

    return ColonAssignmentSpacing;

  })();

}).call(this);
